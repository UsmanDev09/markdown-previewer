{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["marked","require","App","props","state","markdown","this","setState","className","style","width","margin","display","flexDirection","alignItems","justifyContent","minHeight","height","value","onChange","e","updateMarkdown","target","border","dangerouslySetInnerHTML","__html","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAEIA,EAASC,EAAQ,IAEAC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,SAAS,4FAHM,E,2DAgBJA,GACbC,KAAKC,SAAS,CAAEF,e,+BAGR,IAAD,OAGP,OACE,qBAAKG,UAAU,MAAf,SAGA,qBAAKC,MAAS,CAACC,MAAM,SAArB,SACA,sBAAKD,MAAS,CAACC,MAAM,MAAMC,OAAS,SAASC,QAAQ,OAAOC,cAAc,SAASC,WAAW,UAA9F,UACU,oDAKF,sBAAKN,UAAU,QAAQC,MAAS,CAACM,eAAe,UAAhD,UACE,gDACA,0BACEN,MAAS,CAACO,UAAU,QAASC,OAAO,OAAOP,MAAM,QAAQC,OAAO,SAASI,eAAe,UACxFP,UAAU,QAEVU,MAAOZ,KAAKF,MAAMC,SAClBc,SAAU,SAACC,GACT,EAAKC,eAAeD,EAAEE,OAAOJ,aAKrC,gCAIM,yCAKJ,qBAAKT,MAAS,CAACc,OAAO,kBAAkBb,MAAM,QAAQM,UAAU,QAAQC,OAAO,QAE7EO,wBAAyB,CACvBC,OAAQzB,EAAOM,KAAKF,MAAMC,2B,GA5DXqB,IAAMC,WCQxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d00d8ac.chunk.js","sourcesContent":["import React from \"react\";\nimport Badge from \"react-bootstrap/Badge\";\nlet marked = require(\"marked\");\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: `# usman \n## usman\n### usman\n#### usman \n##### usman \n\n- 1  \n       \n    \n      `,\n    };\n  }\n\n  updateMarkdown(markdown) {\n    this.setState({ markdown });\n  }\n\n  render() {\n    \n\n    return (\n      <div className=\"App\">\n        \n              \n      <div style = {{width:\"100vw\"}}> \n      <div style = {{width:\"50%\",margin : \"0 auto\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\"}}>\n                <h1>\n                  Markdown Previewer\n                </h1>\n             \n        \n              <div className=\"input\" style = {{justifyContent:\"center\"}}>\n                <h3>Type something</h3>\n                <textarea \n                  style = {{minHeight:\"200px\", height:\"auto\",width:\"200px\",margin:\"0 auto\",justifyContent:\"center\"}}\n                  className=\"input\"\n                  \n                  value={this.state.markdown}\n                  onChange={(e) => {\n                    this.updateMarkdown(e.target.value);\n                  }}\n                ></textarea>\n              </div>\n           \n            <div >\n            \n             \n              \n                  <h3>\n                    Preview \n                  </h3>\n          \n            \n              <div style = {{border:\"1px solid black\",width:\"200px\",minHeight:\"200px\",height:\"auto\"}}\n             \n                dangerouslySetInnerHTML={{\n                  __html: marked(this.state.markdown),\n                }}\n              ></div>\n              </div>\n       </div>\n       </div>\n       </div>\n   \n    );\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}